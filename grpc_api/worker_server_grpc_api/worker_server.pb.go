// Code generated by protoc-gen-go. DO NOT EDIT.
// source: worker_server.proto

package worker_server_grpc_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Parameter used for Empty inputs
type EmptyParameter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParameter) Reset()         { *m = EmptyParameter{} }
func (m *EmptyParameter) String() string { return proto.CompactTextString(m) }
func (*EmptyParameter) ProtoMessage()    {}
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{0}
}

func (m *EmptyParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParameter.Unmarshal(m, b)
}
func (m *EmptyParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParameter.Marshal(b, m, deterministic)
}
func (m *EmptyParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParameter.Merge(m, src)
}
func (m *EmptyParameter) XXX_Size() int {
	return xxx_messageInfo_EmptyParameter.Size(m)
}
func (m *EmptyParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParameter.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParameter proto.InternalMessageInfo

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckNackResponse) Reset()         { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()    {}
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{1}
}

func (m *AckNackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckNackResponse.Unmarshal(m, b)
}
func (m *AckNackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckNackResponse.Marshal(b, m, deterministic)
}
func (m *AckNackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckNackResponse.Merge(m, src)
}
func (m *AckNackResponse) XXX_Size() int {
	return xxx_messageInfo_AckNackResponse.Size(m)
}
func (m *AckNackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckNackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckNackResponse proto.InternalMessageInfo

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type HeaderStruct struct {
	HeaderId              int32    `protobuf:"varint,1,opt,name=headerId,proto3" json:"headerId,omitempty"`
	HeaderText            string   `protobuf:"bytes,2,opt,name=headerText,proto3" json:"headerText,omitempty"`
	HeaderType            int32    `protobuf:"varint,3,opt,name=headerType,proto3" json:"headerType,omitempty"`
	HeaderTypeName        string   `protobuf:"bytes,4,opt,name=headerTypeName,proto3" json:"headerTypeName,omitempty"`
	HeaderValueCount      int32    `protobuf:"varint,5,opt,name=headerValueCount,proto3" json:"headerValueCount,omitempty"`
	NumberOfFormulas      int32    `protobuf:"varint,6,opt,name=numberOfFormulas,proto3" json:"numberOfFormulas,omitempty"`
	MultiplicatorFactor   int64    `protobuf:"varint,7,opt,name=multiplicatorFactor,proto3" json:"multiplicatorFactor,omitempty"`
	NumberOfRowsGenerated int64    `protobuf:"varint,8,opt,name=numberOfRowsGenerated,proto3" json:"numberOfRowsGenerated,omitempty"`
	ValueComparator       []bool   `protobuf:"varint,9,rep,packed,name=valueComparator,proto3" json:"valueComparator,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *HeaderStruct) Reset()         { *m = HeaderStruct{} }
func (m *HeaderStruct) String() string { return proto.CompactTextString(m) }
func (*HeaderStruct) ProtoMessage()    {}
func (*HeaderStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{2}
}

func (m *HeaderStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderStruct.Unmarshal(m, b)
}
func (m *HeaderStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderStruct.Marshal(b, m, deterministic)
}
func (m *HeaderStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderStruct.Merge(m, src)
}
func (m *HeaderStruct) XXX_Size() int {
	return xxx_messageInfo_HeaderStruct.Size(m)
}
func (m *HeaderStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderStruct.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderStruct proto.InternalMessageInfo

func (m *HeaderStruct) GetHeaderId() int32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

func (m *HeaderStruct) GetHeaderText() string {
	if m != nil {
		return m.HeaderText
	}
	return ""
}

func (m *HeaderStruct) GetHeaderType() int32 {
	if m != nil {
		return m.HeaderType
	}
	return 0
}

func (m *HeaderStruct) GetHeaderTypeName() string {
	if m != nil {
		return m.HeaderTypeName
	}
	return ""
}

func (m *HeaderStruct) GetHeaderValueCount() int32 {
	if m != nil {
		return m.HeaderValueCount
	}
	return 0
}

func (m *HeaderStruct) GetNumberOfFormulas() int32 {
	if m != nil {
		return m.NumberOfFormulas
	}
	return 0
}

func (m *HeaderStruct) GetMultiplicatorFactor() int64 {
	if m != nil {
		return m.MultiplicatorFactor
	}
	return 0
}

func (m *HeaderStruct) GetNumberOfRowsGenerated() int64 {
	if m != nil {
		return m.NumberOfRowsGenerated
	}
	return 0
}

func (m *HeaderStruct) GetValueComparator() []bool {
	if m != nil {
		return m.ValueComparator
	}
	return nil
}

type ValueSetStruct struct {
	ValueSetId           int32    `protobuf:"varint,1,opt,name=valueSetId,proto3" json:"valueSetId,omitempty"`
	HeaderId             int32    `protobuf:"varint,2,opt,name=HeaderId,proto3" json:"HeaderId,omitempty"`
	HeaderText           string   `protobuf:"bytes,3,opt,name=HeaderText,proto3" json:"HeaderText,omitempty"`
	ValueText            string   `protobuf:"bytes,4,opt,name=ValueText,proto3" json:"ValueText,omitempty"`
	IndexAtHeader        int32    `protobuf:"varint,5,opt,name=IndexAtHeader,proto3" json:"IndexAtHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueSetStruct) Reset()         { *m = ValueSetStruct{} }
func (m *ValueSetStruct) String() string { return proto.CompactTextString(m) }
func (*ValueSetStruct) ProtoMessage()    {}
func (*ValueSetStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{3}
}

func (m *ValueSetStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSetStruct.Unmarshal(m, b)
}
func (m *ValueSetStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSetStruct.Marshal(b, m, deterministic)
}
func (m *ValueSetStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSetStruct.Merge(m, src)
}
func (m *ValueSetStruct) XXX_Size() int {
	return xxx_messageInfo_ValueSetStruct.Size(m)
}
func (m *ValueSetStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSetStruct.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSetStruct proto.InternalMessageInfo

func (m *ValueSetStruct) GetValueSetId() int32 {
	if m != nil {
		return m.ValueSetId
	}
	return 0
}

func (m *ValueSetStruct) GetHeaderId() int32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

func (m *ValueSetStruct) GetHeaderText() string {
	if m != nil {
		return m.HeaderText
	}
	return ""
}

func (m *ValueSetStruct) GetValueText() string {
	if m != nil {
		return m.ValueText
	}
	return ""
}

func (m *ValueSetStruct) GetIndexAtHeader() int32 {
	if m != nil {
		return m.IndexAtHeader
	}
	return 0
}

type RuleIdentifier struct {
	RuleId               int32    `protobuf:"varint,1,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	HeaderId             int32    `protobuf:"varint,2,opt,name=headerId,proto3" json:"headerId,omitempty"`
	HeaderText           string   `protobuf:"bytes,3,opt,name=headerText,proto3" json:"headerText,omitempty"`
	HeaderIndex          int32    `protobuf:"varint,4,opt,name=headerIndex,proto3" json:"headerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleIdentifier) Reset()         { *m = RuleIdentifier{} }
func (m *RuleIdentifier) String() string { return proto.CompactTextString(m) }
func (*RuleIdentifier) ProtoMessage()    {}
func (*RuleIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{4}
}

func (m *RuleIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleIdentifier.Unmarshal(m, b)
}
func (m *RuleIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleIdentifier.Marshal(b, m, deterministic)
}
func (m *RuleIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleIdentifier.Merge(m, src)
}
func (m *RuleIdentifier) XXX_Size() int {
	return xxx_messageInfo_RuleIdentifier.Size(m)
}
func (m *RuleIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_RuleIdentifier proto.InternalMessageInfo

func (m *RuleIdentifier) GetRuleId() int32 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *RuleIdentifier) GetHeaderId() int32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

func (m *RuleIdentifier) GetHeaderText() string {
	if m != nil {
		return m.HeaderText
	}
	return ""
}

func (m *RuleIdentifier) GetHeaderIndex() int32 {
	if m != nil {
		return m.HeaderIndex
	}
	return 0
}

// Is used to compose a formula. One formula consists of many ruleBaseBlocks
type RuleBaseBlockStruct struct {
	BuildingBlockType       int32    `protobuf:"varint,1,opt,name=buildingBlockType,proto3" json:"buildingBlockType,omitempty"`
	ValueId                 int32    `protobuf:"varint,2,opt,name=valueId,proto3" json:"valueId,omitempty"`
	BuildingBlockValue      string   `protobuf:"bytes,3,opt,name=buildingBlockValue,proto3" json:"buildingBlockValue,omitempty"`
	HeaderIndexIfappropiant int32    `protobuf:"varint,4,opt,name=headerIndexIfappropiant,proto3" json:"headerIndexIfappropiant,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *RuleBaseBlockStruct) Reset()         { *m = RuleBaseBlockStruct{} }
func (m *RuleBaseBlockStruct) String() string { return proto.CompactTextString(m) }
func (*RuleBaseBlockStruct) ProtoMessage()    {}
func (*RuleBaseBlockStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{5}
}

func (m *RuleBaseBlockStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleBaseBlockStruct.Unmarshal(m, b)
}
func (m *RuleBaseBlockStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleBaseBlockStruct.Marshal(b, m, deterministic)
}
func (m *RuleBaseBlockStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleBaseBlockStruct.Merge(m, src)
}
func (m *RuleBaseBlockStruct) XXX_Size() int {
	return xxx_messageInfo_RuleBaseBlockStruct.Size(m)
}
func (m *RuleBaseBlockStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleBaseBlockStruct.DiscardUnknown(m)
}

var xxx_messageInfo_RuleBaseBlockStruct proto.InternalMessageInfo

func (m *RuleBaseBlockStruct) GetBuildingBlockType() int32 {
	if m != nil {
		return m.BuildingBlockType
	}
	return 0
}

func (m *RuleBaseBlockStruct) GetValueId() int32 {
	if m != nil {
		return m.ValueId
	}
	return 0
}

func (m *RuleBaseBlockStruct) GetBuildingBlockValue() string {
	if m != nil {
		return m.BuildingBlockValue
	}
	return ""
}

func (m *RuleBaseBlockStruct) GetHeaderIndexIfappropiant() int32 {
	if m != nil {
		return m.HeaderIndexIfappropiant
	}
	return 0
}

// The complete rule
type RuleStruct struct {
	RuleIdentifier        *RuleIdentifier        `protobuf:"bytes,1,opt,name=ruleIdentifier,proto3" json:"ruleIdentifier,omitempty"`
	Requirement           string                 `protobuf:"bytes,2,opt,name=requirement,proto3" json:"requirement,omitempty"`
	RuleBaseBlocks        []*RuleBaseBlockStruct `protobuf:"bytes,3,rep,name=ruleBaseBlocks,proto3" json:"ruleBaseBlocks,omitempty"`
	RuleText              string                 `protobuf:"bytes,4,opt,name=ruleText,proto3" json:"ruleText,omitempty"`
	RuleType              int32                  `protobuf:"varint,5,opt,name=ruleType,proto3" json:"ruleType,omitempty"`
	RuleTypeName          string                 `protobuf:"bytes,6,opt,name=ruleTypeName,proto3" json:"ruleTypeName,omitempty"`
	MessageToUserOnTrue   string                 `protobuf:"bytes,7,opt,name=messageToUserOnTrue,proto3" json:"messageToUserOnTrue,omitempty"`
	MessageToUserOnFalse  string                 `protobuf:"bytes,8,opt,name=messageToUserOnFalse,proto3" json:"messageToUserOnFalse,omitempty"`
	MessageToFenixOnTrue  int32                  `protobuf:"varint,9,opt,name=messageToFenixOnTrue,proto3" json:"messageToFenixOnTrue,omitempty"`
	MessageToFenixOnFalse int32                  `protobuf:"varint,10,opt,name=messageToFenixOnFalse,proto3" json:"messageToFenixOnFalse,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *RuleStruct) Reset()         { *m = RuleStruct{} }
func (m *RuleStruct) String() string { return proto.CompactTextString(m) }
func (*RuleStruct) ProtoMessage()    {}
func (*RuleStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{6}
}

func (m *RuleStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleStruct.Unmarshal(m, b)
}
func (m *RuleStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleStruct.Marshal(b, m, deterministic)
}
func (m *RuleStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleStruct.Merge(m, src)
}
func (m *RuleStruct) XXX_Size() int {
	return xxx_messageInfo_RuleStruct.Size(m)
}
func (m *RuleStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleStruct.DiscardUnknown(m)
}

var xxx_messageInfo_RuleStruct proto.InternalMessageInfo

func (m *RuleStruct) GetRuleIdentifier() *RuleIdentifier {
	if m != nil {
		return m.RuleIdentifier
	}
	return nil
}

func (m *RuleStruct) GetRequirement() string {
	if m != nil {
		return m.Requirement
	}
	return ""
}

func (m *RuleStruct) GetRuleBaseBlocks() []*RuleBaseBlockStruct {
	if m != nil {
		return m.RuleBaseBlocks
	}
	return nil
}

func (m *RuleStruct) GetRuleText() string {
	if m != nil {
		return m.RuleText
	}
	return ""
}

func (m *RuleStruct) GetRuleType() int32 {
	if m != nil {
		return m.RuleType
	}
	return 0
}

func (m *RuleStruct) GetRuleTypeName() string {
	if m != nil {
		return m.RuleTypeName
	}
	return ""
}

func (m *RuleStruct) GetMessageToUserOnTrue() string {
	if m != nil {
		return m.MessageToUserOnTrue
	}
	return ""
}

func (m *RuleStruct) GetMessageToUserOnFalse() string {
	if m != nil {
		return m.MessageToUserOnFalse
	}
	return ""
}

func (m *RuleStruct) GetMessageToFenixOnTrue() int32 {
	if m != nil {
		return m.MessageToFenixOnTrue
	}
	return 0
}

func (m *RuleStruct) GetMessageToFenixOnFalse() int32 {
	if m != nil {
		return m.MessageToFenixOnFalse
	}
	return 0
}

// Information sent to worker about Headers, Values and Rules
type CombinationObjectStruct struct {
	Headers              []*HeaderStruct   `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	ValueSets            []*ValueSetStruct `protobuf:"bytes,2,rep,name=valueSets,proto3" json:"valueSets,omitempty"`
	Rules                []*RuleStruct     `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CombinationObjectStruct) Reset()         { *m = CombinationObjectStruct{} }
func (m *CombinationObjectStruct) String() string { return proto.CompactTextString(m) }
func (*CombinationObjectStruct) ProtoMessage()    {}
func (*CombinationObjectStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{7}
}

func (m *CombinationObjectStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CombinationObjectStruct.Unmarshal(m, b)
}
func (m *CombinationObjectStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CombinationObjectStruct.Marshal(b, m, deterministic)
}
func (m *CombinationObjectStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CombinationObjectStruct.Merge(m, src)
}
func (m *CombinationObjectStruct) XXX_Size() int {
	return xxx_messageInfo_CombinationObjectStruct.Size(m)
}
func (m *CombinationObjectStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_CombinationObjectStruct.DiscardUnknown(m)
}

var xxx_messageInfo_CombinationObjectStruct proto.InternalMessageInfo

func (m *CombinationObjectStruct) GetHeaders() []*HeaderStruct {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CombinationObjectStruct) GetValueSets() []*ValueSetStruct {
	if m != nil {
		return m.ValueSets
	}
	return nil
}

func (m *CombinationObjectStruct) GetRules() []*RuleStruct {
	if m != nil {
		return m.Rules
	}
	return nil
}

// Workload sent to Worker from Mother
type MessageToWorkerStruct struct {
	StartOfBatch         int32                    `protobuf:"varint,1,opt,name=startOfBatch,proto3" json:"startOfBatch,omitempty"`
	BatchSize            int32                    `protobuf:"varint,2,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	CombinationObject    *CombinationObjectStruct `protobuf:"bytes,3,opt,name=combinationObject,proto3" json:"combinationObject,omitempty"`
	TaskUuid             string                   `protobuf:"bytes,4,opt,name=task_uuid,json=taskUuid,proto3" json:"task_uuid,omitempty"`
	TaskName             string                   `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MessageToWorkerStruct) Reset()         { *m = MessageToWorkerStruct{} }
func (m *MessageToWorkerStruct) String() string { return proto.CompactTextString(m) }
func (*MessageToWorkerStruct) ProtoMessage()    {}
func (*MessageToWorkerStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{8}
}

func (m *MessageToWorkerStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageToWorkerStruct.Unmarshal(m, b)
}
func (m *MessageToWorkerStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageToWorkerStruct.Marshal(b, m, deterministic)
}
func (m *MessageToWorkerStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageToWorkerStruct.Merge(m, src)
}
func (m *MessageToWorkerStruct) XXX_Size() int {
	return xxx_messageInfo_MessageToWorkerStruct.Size(m)
}
func (m *MessageToWorkerStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageToWorkerStruct.DiscardUnknown(m)
}

var xxx_messageInfo_MessageToWorkerStruct proto.InternalMessageInfo

func (m *MessageToWorkerStruct) GetStartOfBatch() int32 {
	if m != nil {
		return m.StartOfBatch
	}
	return 0
}

func (m *MessageToWorkerStruct) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *MessageToWorkerStruct) GetCombinationObject() *CombinationObjectStruct {
	if m != nil {
		return m.CombinationObject
	}
	return nil
}

func (m *MessageToWorkerStruct) GetTaskUuid() string {
	if m != nil {
		return m.TaskUuid
	}
	return ""
}

func (m *MessageToWorkerStruct) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

// Defines the type of rule
type RuleTypeStruct struct {
	Id                       int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleTypeName             string   `protobuf:"bytes,2,opt,name=ruleTypeName,proto3" json:"ruleTypeName,omitempty"`
	RuleTypeDescription      string   `protobuf:"bytes,3,opt,name=ruleTypeDescription,proto3" json:"ruleTypeDescription,omitempty"`
	ExecuteAfterRuleTypeId   int32    `protobuf:"varint,4,opt,name=executeAfterRuleTypeId,proto3" json:"executeAfterRuleTypeId,omitempty"`
	ActOnPreviousTrueOrFalse bool     `protobuf:"varint,5,opt,name=actOnPreviousTrueOrFalse,proto3" json:"actOnPreviousTrueOrFalse,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *RuleTypeStruct) Reset()         { *m = RuleTypeStruct{} }
func (m *RuleTypeStruct) String() string { return proto.CompactTextString(m) }
func (*RuleTypeStruct) ProtoMessage()    {}
func (*RuleTypeStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{9}
}

func (m *RuleTypeStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleTypeStruct.Unmarshal(m, b)
}
func (m *RuleTypeStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleTypeStruct.Marshal(b, m, deterministic)
}
func (m *RuleTypeStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleTypeStruct.Merge(m, src)
}
func (m *RuleTypeStruct) XXX_Size() int {
	return xxx_messageInfo_RuleTypeStruct.Size(m)
}
func (m *RuleTypeStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleTypeStruct.DiscardUnknown(m)
}

var xxx_messageInfo_RuleTypeStruct proto.InternalMessageInfo

func (m *RuleTypeStruct) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RuleTypeStruct) GetRuleTypeName() string {
	if m != nil {
		return m.RuleTypeName
	}
	return ""
}

func (m *RuleTypeStruct) GetRuleTypeDescription() string {
	if m != nil {
		return m.RuleTypeDescription
	}
	return ""
}

func (m *RuleTypeStruct) GetExecuteAfterRuleTypeId() int32 {
	if m != nil {
		return m.ExecuteAfterRuleTypeId
	}
	return 0
}

func (m *RuleTypeStruct) GetActOnPreviousTrueOrFalse() bool {
	if m != nil {
		return m.ActOnPreviousTrueOrFalse
	}
	return false
}

// Defines the type of Header
type HeaderTypeStruct struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeName             string   `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderTypeStruct) Reset()         { *m = HeaderTypeStruct{} }
func (m *HeaderTypeStruct) String() string { return proto.CompactTextString(m) }
func (*HeaderTypeStruct) ProtoMessage()    {}
func (*HeaderTypeStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_50664b03f4e0d15f, []int{10}
}

func (m *HeaderTypeStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderTypeStruct.Unmarshal(m, b)
}
func (m *HeaderTypeStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderTypeStruct.Marshal(b, m, deterministic)
}
func (m *HeaderTypeStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderTypeStruct.Merge(m, src)
}
func (m *HeaderTypeStruct) XXX_Size() int {
	return xxx_messageInfo_HeaderTypeStruct.Size(m)
}
func (m *HeaderTypeStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderTypeStruct.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderTypeStruct proto.InternalMessageInfo

func (m *HeaderTypeStruct) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HeaderTypeStruct) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyParameter)(nil), "worker_server_grpc_api.EmptyParameter")
	proto.RegisterType((*AckNackResponse)(nil), "worker_server_grpc_api.AckNackResponse")
	proto.RegisterType((*HeaderStruct)(nil), "worker_server_grpc_api.header_struct")
	proto.RegisterType((*ValueSetStruct)(nil), "worker_server_grpc_api.valueSet_struct")
	proto.RegisterType((*RuleIdentifier)(nil), "worker_server_grpc_api.ruleIdentifier")
	proto.RegisterType((*RuleBaseBlockStruct)(nil), "worker_server_grpc_api.ruleBaseBlock_struct")
	proto.RegisterType((*RuleStruct)(nil), "worker_server_grpc_api.rule_struct")
	proto.RegisterType((*CombinationObjectStruct)(nil), "worker_server_grpc_api.combinationObject_struct")
	proto.RegisterType((*MessageToWorkerStruct)(nil), "worker_server_grpc_api.messageToWorker_struct")
	proto.RegisterType((*RuleTypeStruct)(nil), "worker_server_grpc_api.ruleType_struct")
	proto.RegisterType((*HeaderTypeStruct)(nil), "worker_server_grpc_api.headerType_struct")
}

func init() { proto.RegisterFile("worker_server.proto", fileDescriptor_50664b03f4e0d15f) }

var fileDescriptor_50664b03f4e0d15f = []byte{
	// 959 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xe7, 0xec, 0x3a, 0xb1, 0xc7, 0x69, 0xd2, 0x6c, 0x4b, 0x38, 0x05, 0x54, 0x59, 0x07, 0x14,
	0x0b, 0x55, 0x56, 0x65, 0x10, 0x02, 0x5e, 0x2a, 0x07, 0x9a, 0xc6, 0x2f, 0x71, 0x75, 0x71, 0x41,
	0xbc, 0x10, 0xd6, 0x77, 0xe3, 0x74, 0xb1, 0xef, 0x0f, 0x7b, 0x7b, 0x69, 0xca, 0x1b, 0x2f, 0x7c,
	0x1f, 0xbe, 0x05, 0x5f, 0x81, 0x07, 0x3e, 0x01, 0xaf, 0xbc, 0x22, 0xa1, 0xdd, 0xbd, 0x3d, 0xdf,
	0x9d, 0xef, 0x22, 0xf5, 0xcd, 0xf3, 0xfb, 0xed, 0xcc, 0xce, 0xce, 0xfc, 0x66, 0x7c, 0x70, 0xff,
	0x75, 0xc4, 0x57, 0xc8, 0x2f, 0x13, 0xe4, 0xd7, 0xc8, 0x47, 0x31, 0x8f, 0x44, 0x44, 0x8e, 0x4a,
	0xe0, 0xe5, 0x15, 0x8f, 0xbd, 0x4b, 0x1a, 0x33, 0xe7, 0x1e, 0xec, 0x3f, 0x0b, 0x62, 0xf1, 0xe6,
	0x05, 0xe5, 0x34, 0x40, 0x81, 0xdc, 0x79, 0x0e, 0x07, 0x13, 0x6f, 0x75, 0x4e, 0xbd, 0x95, 0x8b,
	0x49, 0x1c, 0x85, 0x09, 0x12, 0x1b, 0x76, 0xa9, 0xb7, 0x0a, 0xa9, 0xb7, 0xb2, 0xad, 0x81, 0x35,
	0xec, 0xba, 0xc6, 0x24, 0xc7, 0xd0, 0xf5, 0xa2, 0x20, 0xc0, 0x50, 0x24, 0x76, 0x6b, 0x60, 0x0d,
	0x7b, 0x6e, 0x6e, 0x3b, 0xff, 0xb5, 0xe0, 0xee, 0x2b, 0xa4, 0xbe, 0xbc, 0x55, 0xf0, 0xd4, 0x13,
	0xf2, 0xb4, 0x06, 0xa6, 0xbe, 0x0a, 0xd4, 0x71, 0x73, 0x9b, 0x3c, 0x04, 0xd0, 0xbf, 0xe7, 0x78,
	0x23, 0xb2, 0x58, 0x05, 0xa4, 0xc0, 0xbf, 0x89, 0xd1, 0x6e, 0x2b, 0xef, 0x02, 0x42, 0x1e, 0xc1,
	0xfe, 0xc6, 0x3a, 0xa7, 0x01, 0xda, 0x77, 0x54, 0x8c, 0x0a, 0x4a, 0x3e, 0x85, 0x7b, 0x1a, 0xf9,
	0x8e, 0xae, 0x53, 0xfc, 0x26, 0x4a, 0x43, 0x61, 0x77, 0x54, 0xb4, 0x2d, 0x5c, 0x9e, 0x0d, 0xd3,
	0x60, 0x81, 0x7c, 0xb6, 0x3c, 0x8d, 0x78, 0x90, 0xae, 0x69, 0x62, 0xef, 0xe8, 0xb3, 0x55, 0x9c,
	0x3c, 0x81, 0xfb, 0x41, 0xba, 0x16, 0x2c, 0x5e, 0x33, 0x8f, 0x8a, 0x88, 0x9f, 0x52, 0x4f, 0x44,
	0xdc, 0xde, 0x1d, 0x58, 0xc3, 0xb6, 0x5b, 0x47, 0x91, 0xcf, 0xe1, 0x5d, 0x13, 0xc5, 0x8d, 0x5e,
	0x27, 0xcf, 0x31, 0x44, 0x4e, 0x05, 0xfa, 0x76, 0x57, 0xf9, 0xd4, 0x93, 0x64, 0x08, 0x07, 0xd7,
	0x3a, 0xc3, 0x20, 0xa6, 0x5c, 0x86, 0xb3, 0x7b, 0x83, 0xf6, 0xb0, 0xeb, 0x56, 0x61, 0xe7, 0x0f,
	0x2b, 0x3b, 0x7a, 0x81, 0xc2, 0x74, 0xe0, 0x21, 0x80, 0x81, 0xf2, 0x1e, 0x14, 0x10, 0xd9, 0xa1,
	0x33, 0xd3, 0xa1, 0x96, 0xee, 0xd0, 0x59, 0xa1, 0x43, 0x67, 0x9b, 0x0e, 0xb5, 0x75, 0x87, 0x36,
	0x08, 0xf9, 0x00, 0x7a, 0xaa, 0x76, 0x8a, 0xd6, 0xc5, 0xdf, 0x00, 0xe4, 0x23, 0xb8, 0x3b, 0x0d,
	0x7d, 0xbc, 0x99, 0x08, 0xed, 0x92, 0x15, 0xbd, 0x0c, 0x3a, 0xbf, 0x5b, 0xb0, 0xcf, 0xd3, 0x35,
	0x4e, 0x7d, 0x0c, 0x05, 0x5b, 0x32, 0xe4, 0xe4, 0x08, 0x76, 0x34, 0x92, 0xa5, 0x9b, 0x59, 0x25,
	0x31, 0xb5, 0x6e, 0x15, 0x53, 0x7b, 0x4b, 0x4c, 0x03, 0xe8, 0x67, 0x67, 0xe5, 0xed, 0x2a, 0xd9,
	0x8e, 0x5b, 0x84, 0x9c, 0x3f, 0x2d, 0x78, 0x20, 0x2f, 0x3a, 0xa1, 0x09, 0x9e, 0xac, 0x23, 0x6f,
	0x65, 0x2a, 0xf8, 0x18, 0x0e, 0x17, 0x29, 0x5b, 0xfb, 0x2c, 0xbc, 0x52, 0xb8, 0x92, 0xa3, 0xce,
	0x6c, 0x9b, 0x90, 0x93, 0xa3, 0xaa, 0x9b, 0xe7, 0x68, 0x4c, 0x32, 0x02, 0x52, 0x3a, 0xae, 0x2a,
	0x95, 0xa5, 0x5a, 0xc3, 0x90, 0x2f, 0xe1, 0xbd, 0x42, 0x7e, 0xd3, 0x25, 0x8d, 0x63, 0x1e, 0xc5,
	0x8c, 0x86, 0x22, 0x4b, 0xbf, 0x89, 0x76, 0x7e, 0xbb, 0x03, 0x7d, 0xf9, 0x14, 0xf3, 0x82, 0xf3,
	0x6a, 0x89, 0x55, 0xfa, 0xfd, 0xf1, 0xa3, 0x51, 0xfd, 0x8e, 0x18, 0x95, 0x4f, 0xbb, 0xd5, 0x06,
	0x0d, 0xa0, 0xcf, 0xf1, 0x97, 0x94, 0x71, 0x94, 0x73, 0x9f, 0x8d, 0x6e, 0x11, 0x22, 0x73, 0x7d,
	0x63, 0x5e, 0xcb, 0xc4, 0x6e, 0x0f, 0xda, 0xc3, 0xfe, 0xf8, 0xf1, 0x6d, 0x37, 0x56, 0x2b, 0xef,
	0x56, 0x62, 0x48, 0x01, 0x48, 0xa4, 0x20, 0xb7, 0xdc, 0xce, 0x39, 0xd9, 0x1c, 0x2d, 0xb4, 0xdc,
	0x26, 0x0e, 0xec, 0x99, 0xdf, 0x6a, 0x4f, 0xec, 0x28, 0xdf, 0x12, 0xa6, 0xa6, 0x19, 0x93, 0x84,
	0x5e, 0xe1, 0x3c, 0x7a, 0x99, 0x20, 0x9f, 0x85, 0x73, 0x9e, 0xa2, 0x9a, 0xe6, 0x9e, 0x5b, 0x47,
	0x91, 0x31, 0x3c, 0xa8, 0xc0, 0xa7, 0x74, 0x9d, 0xa0, 0x1a, 0xe6, 0x9e, 0x5b, 0xcb, 0x95, 0x7c,
	0x4e, 0x31, 0x64, 0x37, 0xd9, 0x35, 0x3d, 0x95, 0x71, 0x2d, 0x27, 0xb7, 0x46, 0x15, 0xd7, 0x17,
	0x81, 0x72, 0xaa, 0x27, 0x9d, 0xbf, 0x2d, 0xb0, 0xbd, 0x28, 0x58, 0xb0, 0x90, 0x0a, 0x16, 0x85,
	0xb3, 0xc5, 0xcf, 0xe8, 0xe5, 0x4b, 0xe1, 0x29, 0xec, 0x6a, 0xed, 0x24, 0xb6, 0xa5, 0xfa, 0xf2,
	0x71, 0x53, 0x5f, 0x4a, 0xeb, 0xdc, 0x35, 0x5e, 0xe4, 0x19, 0xf4, 0xcc, 0x0e, 0x91, 0x7f, 0x03,
	0x32, 0xc4, 0x27, 0x4d, 0x21, 0x2a, 0x1b, 0xc9, 0xdd, 0x78, 0x92, 0xaf, 0xa0, 0x23, 0x9b, 0x60,
	0xd4, 0xf1, 0xe1, 0x6d, 0xea, 0x30, 0xee, 0xda, 0xc3, 0xf9, 0xd7, 0x82, 0xa3, 0xfc, 0xe5, 0xdf,
	0x67, 0x6e, 0xfa, 0x75, 0x0e, 0xec, 0x25, 0x82, 0x72, 0x31, 0x5b, 0x9e, 0x50, 0xe1, 0xbd, 0xca,
	0x66, 0xb5, 0x84, 0xc9, 0xd5, 0xb5, 0x90, 0x3f, 0x2e, 0xd8, 0xaf, 0x98, 0x0d, 0xea, 0x06, 0x20,
	0x3f, 0xc2, 0xe1, 0x56, 0xed, 0xd4, 0xa4, 0xf6, 0xc7, 0x4f, 0x9a, 0x72, 0x6c, 0x2a, 0xb6, 0xbb,
	0x1d, 0x8a, 0xbc, 0x0f, 0x3d, 0x41, 0x93, 0xd5, 0x65, 0x9a, 0x32, 0xdf, 0x28, 0x59, 0x02, 0x2f,
	0x53, 0xe6, 0xe7, 0x64, 0x28, 0xa5, 0xda, 0xd9, 0x90, 0x52, 0xa6, 0xce, 0x3f, 0x16, 0x1c, 0x18,
	0xdd, 0x9a, 0xf7, 0xee, 0x43, 0x8b, 0x99, 0x5d, 0xd9, 0x62, 0xfe, 0x96, 0xdc, 0x5b, 0xf5, 0x72,
	0x37, 0xf6, 0xb7, 0x98, 0x78, 0x9c, 0xc5, 0x32, 0xbd, 0x6c, 0x1b, 0xd5, 0x51, 0xe4, 0x0b, 0x38,
	0xc2, 0x1b, 0xf4, 0x52, 0x81, 0x93, 0xa5, 0x40, 0xee, 0x66, 0x47, 0xa6, 0x7e, 0xb6, 0x8d, 0x1a,
	0x58, 0xf2, 0x35, 0xd8, 0xd4, 0x13, 0xb3, 0xf0, 0x05, 0xc7, 0x6b, 0x16, 0xa5, 0x89, 0xd4, 0xf4,
	0x8c, 0x6b, 0x05, 0x77, 0xd4, 0xb7, 0x45, 0x23, 0xef, 0x3c, 0x85, 0xc3, 0xcd, 0x9f, 0x79, 0xd3,
	0x73, 0x8f, 0xa1, 0x2b, 0xca, 0x4f, 0xcd, 0xed, 0xf1, 0x5f, 0x16, 0xec, 0x69, 0x71, 0x5c, 0xa8,
	0x76, 0x91, 0x2b, 0x00, 0x6d, 0xcf, 0x69, 0xb2, 0x22, 0xa3, 0xa6, 0x66, 0xd6, 0x2b, 0xeb, 0xb8,
	0x51, 0xe3, 0x95, 0xef, 0x27, 0xe7, 0x1d, 0xf2, 0x13, 0xf4, 0x27, 0x1c, 0x7f, 0x88, 0xd2, 0xc9,
	0x9a, 0x5d, 0x23, 0x69, 0x5c, 0xb5, 0xe5, 0x6f, 0xb1, 0xb7, 0xb8, 0x61, 0xb1, 0xa3, 0xbe, 0xf3,
	0x3e, 0xfb, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x61, 0xc4, 0x75, 0x13, 0xfe, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkerServerClient is the client API for WorkerServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerServerClient interface {
	//Main coordinator sends task to worker with this service
	WorkerTask(ctx context.Context, in *MessageToWorkerStruct, opts ...grpc.CallOption) (*AckNackResponse, error)
	//Main coordinator, or other worker on same IP, can check if worker is still alive with this service
	AreYouAlive(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error)
}

type workerServerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerServerClient(cc *grpc.ClientConn) WorkerServerClient {
	return &workerServerClient{cc}
}

func (c *workerServerClient) WorkerTask(ctx context.Context, in *MessageToWorkerStruct, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/worker_server_grpc_api.WorkerServer/WorkerTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerServerClient) AreYouAlive(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/worker_server_grpc_api.WorkerServer/AreYouAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServerServer is the server API for WorkerServer service.
type WorkerServerServer interface {
	//Main coordinator sends task to worker with this service
	WorkerTask(context.Context, *MessageToWorkerStruct) (*AckNackResponse, error)
	//Main coordinator, or other worker on same IP, can check if worker is still alive with this service
	AreYouAlive(context.Context, *EmptyParameter) (*AckNackResponse, error)
}

// UnimplementedWorkerServerServer can be embedded to have forward compatible implementations.
type UnimplementedWorkerServerServer struct {
}

func (*UnimplementedWorkerServerServer) WorkerTask(ctx context.Context, req *MessageToWorkerStruct) (*AckNackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkerTask not implemented")
}
func (*UnimplementedWorkerServerServer) AreYouAlive(ctx context.Context, req *EmptyParameter) (*AckNackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AreYouAlive not implemented")
}

func RegisterWorkerServerServer(s *grpc.Server, srv WorkerServerServer) {
	s.RegisterService(&_WorkerServer_serviceDesc, srv)
}

func _WorkerServer_WorkerTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageToWorkerStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServerServer).WorkerTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/worker_server_grpc_api.WorkerServer/WorkerTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServerServer).WorkerTask(ctx, req.(*MessageToWorkerStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkerServer_AreYouAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServerServer).AreYouAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/worker_server_grpc_api.WorkerServer/AreYouAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServerServer).AreYouAlive(ctx, req.(*EmptyParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkerServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "worker_server_grpc_api.WorkerServer",
	HandlerType: (*WorkerServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WorkerTask",
			Handler:    _WorkerServer_WorkerTask_Handler,
		},
		{
			MethodName: "AreYouAlive",
			Handler:    _WorkerServer_AreYouAlive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "worker_server.proto",
}
