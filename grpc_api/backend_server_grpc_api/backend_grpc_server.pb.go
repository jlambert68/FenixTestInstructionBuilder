// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend_grpc_server.proto

package backend_server_grpc_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QMLModelTypeToAndFromBackend int32

const (
	QMLModelTypeToAndFromBackend_DomainModel QMLModelTypeToAndFromBackend = 0
	QMLModelTypeToAndFromBackend_PluginModel QMLModelTypeToAndFromBackend = 1
)

var QMLModelTypeToAndFromBackend_name = map[int32]string{
	0: "DomainModel",
	1: "PluginModel",
}

var QMLModelTypeToAndFromBackend_value = map[string]int32{
	"DomainModel": 0,
	"PluginModel": 1,
}

func (x QMLModelTypeToAndFromBackend) String() string {
	return proto.EnumName(QMLModelTypeToAndFromBackend_name, int32(x))
}

func (QMLModelTypeToAndFromBackend) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{0}
}

// Parameter used for Empty inputs
type EmptyParameter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParameter) Reset()         { *m = EmptyParameter{} }
func (m *EmptyParameter) String() string { return proto.CompactTextString(m) }
func (*EmptyParameter) ProtoMessage()    {}
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{0}
}

func (m *EmptyParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParameter.Unmarshal(m, b)
}
func (m *EmptyParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParameter.Marshal(b, m, deterministic)
}
func (m *EmptyParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParameter.Merge(m, src)
}
func (m *EmptyParameter) XXX_Size() int {
	return xxx_messageInfo_EmptyParameter.Size(m)
}
func (m *EmptyParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParameter.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParameter proto.InternalMessageInfo

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckNackResponse) Reset()         { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()    {}
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{1}
}

func (m *AckNackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckNackResponse.Unmarshal(m, b)
}
func (m *AckNackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckNackResponse.Marshal(b, m, deterministic)
}
func (m *AckNackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckNackResponse.Merge(m, src)
}
func (m *AckNackResponse) XXX_Size() int {
	return xxx_messageInfo_AckNackResponse.Size(m)
}
func (m *AckNackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckNackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckNackResponse proto.InternalMessageInfo

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

// Message for GUID
type GuidResponse struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Acknack              bool     `protobuf:"varint,2,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuidResponse) Reset()         { *m = GuidResponse{} }
func (m *GuidResponse) String() string { return proto.CompactTextString(m) }
func (*GuidResponse) ProtoMessage()    {}
func (*GuidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{2}
}

func (m *GuidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuidResponse.Unmarshal(m, b)
}
func (m *GuidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuidResponse.Marshal(b, m, deterministic)
}
func (m *GuidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuidResponse.Merge(m, src)
}
func (m *GuidResponse) XXX_Size() int {
	return xxx_messageInfo_GuidResponse.Size(m)
}
func (m *GuidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuidResponse proto.InternalMessageInfo

func (m *GuidResponse) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *GuidResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *GuidResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

// Json string message with QML model that will be load from Server
type QmlModeToLoadlFromServerResponse struct {
	JsonStringForPluginQmlModel  string                       `protobuf:"bytes,1,opt,name=jsonStringForPluginQmlModel,proto3" json:"jsonStringForPluginQmlModel,omitempty"`
	QmlModelTypeToAndFromBackend QMLModelTypeToAndFromBackend `protobuf:"varint,2,opt,name=qmlModelTypeToAndFromBackend,proto3,enum=backend_server_grpc_api.QMLModelTypeToAndFromBackend" json:"qmlModelTypeToAndFromBackend,omitempty"`
	Acknack                      bool                         `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments                     string                       `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                     `json:"-"`
	XXX_unrecognized             []byte                       `json:"-"`
	XXX_sizecache                int32                        `json:"-"`
}

func (m *QmlModeToLoadlFromServerResponse) Reset()         { *m = QmlModeToLoadlFromServerResponse{} }
func (m *QmlModeToLoadlFromServerResponse) String() string { return proto.CompactTextString(m) }
func (*QmlModeToLoadlFromServerResponse) ProtoMessage()    {}
func (*QmlModeToLoadlFromServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{3}
}

func (m *QmlModeToLoadlFromServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QmlModeToLoadlFromServerResponse.Unmarshal(m, b)
}
func (m *QmlModeToLoadlFromServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QmlModeToLoadlFromServerResponse.Marshal(b, m, deterministic)
}
func (m *QmlModeToLoadlFromServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QmlModeToLoadlFromServerResponse.Merge(m, src)
}
func (m *QmlModeToLoadlFromServerResponse) XXX_Size() int {
	return xxx_messageInfo_QmlModeToLoadlFromServerResponse.Size(m)
}
func (m *QmlModeToLoadlFromServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QmlModeToLoadlFromServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QmlModeToLoadlFromServerResponse proto.InternalMessageInfo

func (m *QmlModeToLoadlFromServerResponse) GetJsonStringForPluginQmlModel() string {
	if m != nil {
		return m.JsonStringForPluginQmlModel
	}
	return ""
}

func (m *QmlModeToLoadlFromServerResponse) GetQmlModelTypeToAndFromBackend() QMLModelTypeToAndFromBackend {
	if m != nil {
		return m.QmlModelTypeToAndFromBackend
	}
	return QMLModelTypeToAndFromBackend_DomainModel
}

func (m *QmlModeToLoadlFromServerResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *QmlModeToLoadlFromServerResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

// Json string message with QML model that will be saved at Server
type QmlModelToSaveAtServerRequest struct {
	JsonStringForPluginQmlModel  string                       `protobuf:"bytes,1,opt,name=jsonStringForPluginQmlModel,proto3" json:"jsonStringForPluginQmlModel,omitempty"`
	QmlModelTypeToAndFromBackend QMLModelTypeToAndFromBackend `protobuf:"varint,2,opt,name=qmlModelTypeToAndFromBackend,proto3,enum=backend_server_grpc_api.QMLModelTypeToAndFromBackend" json:"qmlModelTypeToAndFromBackend,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                     `json:"-"`
	XXX_unrecognized             []byte                       `json:"-"`
	XXX_sizecache                int32                        `json:"-"`
}

func (m *QmlModelToSaveAtServerRequest) Reset()         { *m = QmlModelToSaveAtServerRequest{} }
func (m *QmlModelToSaveAtServerRequest) String() string { return proto.CompactTextString(m) }
func (*QmlModelToSaveAtServerRequest) ProtoMessage()    {}
func (*QmlModelToSaveAtServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{4}
}

func (m *QmlModelToSaveAtServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QmlModelToSaveAtServerRequest.Unmarshal(m, b)
}
func (m *QmlModelToSaveAtServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QmlModelToSaveAtServerRequest.Marshal(b, m, deterministic)
}
func (m *QmlModelToSaveAtServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QmlModelToSaveAtServerRequest.Merge(m, src)
}
func (m *QmlModelToSaveAtServerRequest) XXX_Size() int {
	return xxx_messageInfo_QmlModelToSaveAtServerRequest.Size(m)
}
func (m *QmlModelToSaveAtServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QmlModelToSaveAtServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QmlModelToSaveAtServerRequest proto.InternalMessageInfo

func (m *QmlModelToSaveAtServerRequest) GetJsonStringForPluginQmlModel() string {
	if m != nil {
		return m.JsonStringForPluginQmlModel
	}
	return ""
}

func (m *QmlModelToSaveAtServerRequest) GetQmlModelTypeToAndFromBackend() QMLModelTypeToAndFromBackend {
	if m != nil {
		return m.QmlModelTypeToAndFromBackend
	}
	return QMLModelTypeToAndFromBackend_DomainModel
}

// Message defining QMLModelTypeToAndFromBackend used
type QMLModelTypeToAndFromBackendMessage struct {
	QMLModelTypeToAndFromBackendType QMLModelTypeToAndFromBackend `protobuf:"varint,1,opt,name=qMLModelTypeToAndFromBackendType,proto3,enum=backend_server_grpc_api.QMLModelTypeToAndFromBackend" json:"qMLModelTypeToAndFromBackendType,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                     `json:"-"`
	XXX_unrecognized                 []byte                       `json:"-"`
	XXX_sizecache                    int32                        `json:"-"`
}

func (m *QMLModelTypeToAndFromBackendMessage) Reset()         { *m = QMLModelTypeToAndFromBackendMessage{} }
func (m *QMLModelTypeToAndFromBackendMessage) String() string { return proto.CompactTextString(m) }
func (*QMLModelTypeToAndFromBackendMessage) ProtoMessage()    {}
func (*QMLModelTypeToAndFromBackendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ae52c3330092bb, []int{5}
}

func (m *QMLModelTypeToAndFromBackendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QMLModelTypeToAndFromBackendMessage.Unmarshal(m, b)
}
func (m *QMLModelTypeToAndFromBackendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QMLModelTypeToAndFromBackendMessage.Marshal(b, m, deterministic)
}
func (m *QMLModelTypeToAndFromBackendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QMLModelTypeToAndFromBackendMessage.Merge(m, src)
}
func (m *QMLModelTypeToAndFromBackendMessage) XXX_Size() int {
	return xxx_messageInfo_QMLModelTypeToAndFromBackendMessage.Size(m)
}
func (m *QMLModelTypeToAndFromBackendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_QMLModelTypeToAndFromBackendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_QMLModelTypeToAndFromBackendMessage proto.InternalMessageInfo

func (m *QMLModelTypeToAndFromBackendMessage) GetQMLModelTypeToAndFromBackendType() QMLModelTypeToAndFromBackend {
	if m != nil {
		return m.QMLModelTypeToAndFromBackendType
	}
	return QMLModelTypeToAndFromBackend_DomainModel
}

func init() {
	proto.RegisterEnum("backend_server_grpc_api.QMLModelTypeToAndFromBackend", QMLModelTypeToAndFromBackend_name, QMLModelTypeToAndFromBackend_value)
	proto.RegisterType((*EmptyParameter)(nil), "backend_server_grpc_api.EmptyParameter")
	proto.RegisterType((*AckNackResponse)(nil), "backend_server_grpc_api.AckNackResponse")
	proto.RegisterType((*GuidResponse)(nil), "backend_server_grpc_api.GuidResponse")
	proto.RegisterType((*QmlModeToLoadlFromServerResponse)(nil), "backend_server_grpc_api.QmlModeToLoadlFromServerResponse")
	proto.RegisterType((*QmlModelToSaveAtServerRequest)(nil), "backend_server_grpc_api.QmlModelToSaveAtServerRequest")
	proto.RegisterType((*QMLModelTypeToAndFromBackendMessage)(nil), "backend_server_grpc_api.QMLModelTypeToAndFromBackendMessage")
}

func init() { proto.RegisterFile("backend_grpc_server.proto", fileDescriptor_83ae52c3330092bb) }

var fileDescriptor_83ae52c3330092bb = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x93, 0x0a, 0xda, 0x69, 0x94, 0x56, 0x7b, 0x21, 0x84, 0x22, 0x45, 0x46, 0x88, 0x88,
	0x43, 0x0e, 0x45, 0x20, 0x21, 0x71, 0xa8, 0x11, 0x34, 0x42, 0x6a, 0x50, 0xeb, 0xf8, 0x00, 0xa7,
	0xb2, 0x59, 0x8f, 0xac, 0xc5, 0xf6, 0xae, 0xb3, 0xbb, 0x8e, 0x94, 0x23, 0x67, 0xce, 0x3c, 0x04,
	0xef, 0xc4, 0x23, 0xf0, 0x10, 0xc8, 0x7f, 0x21, 0x44, 0xd8, 0x81, 0xde, 0x7a, 0xdb, 0x1d, 0x7f,
	0xf3, 0xcd, 0xcc, 0xb7, 0xfe, 0x06, 0xee, 0xcf, 0x29, 0x0b, 0x51, 0xf8, 0xd7, 0x81, 0x4a, 0xd8,
	0xb5, 0x46, 0xb5, 0x44, 0x35, 0x4e, 0x94, 0x34, 0x92, 0xdc, 0xab, 0x3e, 0x15, 0xd1, 0x02, 0x41,
	0x13, 0x6e, 0x1f, 0x43, 0xef, 0x6d, 0x9c, 0x98, 0xd5, 0x25, 0x55, 0x34, 0x46, 0x83, 0xca, 0x9e,
	0xc0, 0x91, 0xc3, 0xc2, 0xf7, 0x94, 0x85, 0x2e, 0xea, 0x44, 0x0a, 0x8d, 0xa4, 0x0f, 0x77, 0x29,
	0x0b, 0x05, 0x65, 0x61, 0xdf, 0x1a, 0x5a, 0xa3, 0x7d, 0xb7, 0xba, 0x92, 0x01, 0xec, 0x33, 0x19,
	0xc7, 0x28, 0x8c, 0xee, 0xb7, 0x87, 0xd6, 0xe8, 0xc0, 0x5d, 0xdf, 0xed, 0x0f, 0xd0, 0x9d, 0xa4,
	0xdc, 0x5f, 0xb3, 0x10, 0xd8, 0x0b, 0x52, 0xee, 0xe7, 0x14, 0x07, 0x6e, 0x7e, 0xde, 0x64, 0x6e,
	0xd7, 0x33, 0x77, 0xb6, 0x98, 0xbf, 0xb5, 0x61, 0x78, 0x15, 0x47, 0x53, 0xe9, 0xa3, 0x27, 0x2f,
	0x24, 0xf5, 0xa3, 0x73, 0x25, 0xe3, 0x59, 0x3e, 0xda, 0xba, 0xdc, 0x19, 0x3c, 0xf8, 0xac, 0xa5,
	0x98, 0x19, 0xc5, 0x45, 0x70, 0x2e, 0xd5, 0x65, 0x94, 0x06, 0x5c, 0x94, 0x69, 0x51, 0xd9, 0x45,
	0x13, 0x84, 0xac, 0xe0, 0x64, 0x51, 0x9e, 0xbd, 0x55, 0x82, 0x9e, 0x74, 0x84, 0x9f, 0x15, 0x7a,
	0x5d, 0x68, 0x99, 0x77, 0xdc, 0x3b, 0x7d, 0x3e, 0xae, 0xd1, 0x76, 0x7c, 0x35, 0xbd, 0xa8, 0x4d,
	0x76, 0x1b, 0xa9, 0x37, 0x75, 0xe9, 0xd4, 0xeb, 0xb2, 0xb7, 0xa5, 0xcb, 0x0f, 0x0b, 0x1e, 0x56,
	0xdd, 0x7b, 0x72, 0x46, 0x97, 0xe8, 0x98, 0x4a, 0x95, 0x45, 0x8a, 0xda, 0xdc, 0x6a, 0x51, 0xec,
	0xef, 0x16, 0x3c, 0x6a, 0x4a, 0x9f, 0xa2, 0xd6, 0x34, 0x40, 0xf2, 0xc5, 0x82, 0xe1, 0xa2, 0x01,
	0x97, 0xc5, 0xf2, 0x51, 0x6f, 0xdc, 0xe7, 0x4e, 0xfa, 0xa7, 0x67, 0x70, 0xd2, 0xc4, 0x40, 0x8e,
	0xe0, 0xf0, 0x8d, 0x8c, 0x29, 0x17, 0x39, 0xe4, 0xb8, 0x95, 0x05, 0x0a, 0xa5, 0x8b, 0x80, 0x75,
	0xfa, 0xb3, 0x03, 0xb6, 0x87, 0xda, 0xbc, 0x13, 0xda, 0xa8, 0x94, 0x19, 0x2e, 0x45, 0x99, 0x3c,
	0x51, 0x09, 0xcb, 0x9e, 0x95, 0x33, 0xd4, 0x64, 0x0e, 0x87, 0x8e, 0xc2, 0x8f, 0x32, 0x75, 0x22,
	0xbe, 0x44, 0xf2, 0xa4, 0x76, 0xa0, 0x3f, 0x6d, 0x3e, 0x18, 0xd5, 0x02, 0xb7, 0xdc, 0x6f, 0xb7,
	0xc8, 0x27, 0xe8, 0x4e, 0x50, 0xa0, 0xa2, 0x06, 0x33, 0x47, 0xff, 0x7b, 0x91, 0xc7, 0xb5, 0xc0,
	0xcd, 0xcd, 0x60, 0xb7, 0xc8, 0x57, 0x0b, 0x7a, 0x99, 0x91, 0x7f, 0xfb, 0x98, 0xbc, 0xba, 0xd1,
	0xd3, 0x94, 0xff, 0xc0, 0xe0, 0x65, 0x7d, 0xf6, 0x8e, 0xc5, 0x61, 0xb7, 0x88, 0x82, 0x6e, 0x66,
	0x1e, 0x4f, 0x96, 0xad, 0xbc, 0xd8, 0x45, 0xf6, 0x77, 0xb7, 0xfd, 0x8f, 0xc6, 0xf3, 0x3b, 0xf9,
	0xa2, 0x7e, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x51, 0x83, 0xbb, 0xc5, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestInstructionBackendGrpcServicesClient is the client API for TestInstructionBackendGrpcServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestInstructionBackendGrpcServicesClient interface {
	//QML Server can check if Backend server is still alive with this service
	AreYouAlive(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Generates an new GUID, used for identification
	GenerateGuid(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*GuidResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Loads data, defined by MessageTypeToAndFromBackend,  from the server
	LoadFromServer(ctx context.Context, in *QMLModelTypeToAndFromBackendMessage, opts ...grpc.CallOption) (*QmlModeToLoadlFromServerResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Save data, defined by MessageTypeToAndFromBackend, at the server
	SaveToServer(ctx context.Context, in *QmlModelToSaveAtServerRequest, opts ...grpc.CallOption) (*AckNackResponse, error)
}

type testInstructionBackendGrpcServicesClient struct {
	cc *grpc.ClientConn
}

func NewTestInstructionBackendGrpcServicesClient(cc *grpc.ClientConn) TestInstructionBackendGrpcServicesClient {
	return &testInstructionBackendGrpcServicesClient{cc}
}

func (c *testInstructionBackendGrpcServicesClient) AreYouAlive(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/backend_server_grpc_api.TestInstructionBackendGrpcServices/AreYouAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testInstructionBackendGrpcServicesClient) GenerateGuid(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*GuidResponse, error) {
	out := new(GuidResponse)
	err := c.cc.Invoke(ctx, "/backend_server_grpc_api.TestInstructionBackendGrpcServices/GenerateGuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testInstructionBackendGrpcServicesClient) LoadFromServer(ctx context.Context, in *QMLModelTypeToAndFromBackendMessage, opts ...grpc.CallOption) (*QmlModeToLoadlFromServerResponse, error) {
	out := new(QmlModeToLoadlFromServerResponse)
	err := c.cc.Invoke(ctx, "/backend_server_grpc_api.TestInstructionBackendGrpcServices/LoadFromServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testInstructionBackendGrpcServicesClient) SaveToServer(ctx context.Context, in *QmlModelToSaveAtServerRequest, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/backend_server_grpc_api.TestInstructionBackendGrpcServices/SaveToServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestInstructionBackendGrpcServicesServer is the server API for TestInstructionBackendGrpcServices service.
type TestInstructionBackendGrpcServicesServer interface {
	//QML Server can check if Backend server is still alive with this service
	AreYouAlive(context.Context, *EmptyParameter) (*AckNackResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Generates an new GUID, used for identification
	GenerateGuid(context.Context, *EmptyParameter) (*GuidResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Loads data, defined by MessageTypeToAndFromBackend,  from the server
	LoadFromServer(context.Context, *QMLModelTypeToAndFromBackendMessage) (*QmlModeToLoadlFromServerResponse, error)
	// ** QML Server forwards this questions to Backend Server **
	// Save data, defined by MessageTypeToAndFromBackend, at the server
	SaveToServer(context.Context, *QmlModelToSaveAtServerRequest) (*AckNackResponse, error)
}

// UnimplementedTestInstructionBackendGrpcServicesServer can be embedded to have forward compatible implementations.
type UnimplementedTestInstructionBackendGrpcServicesServer struct {
}

func (*UnimplementedTestInstructionBackendGrpcServicesServer) AreYouAlive(ctx context.Context, req *EmptyParameter) (*AckNackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AreYouAlive not implemented")
}
func (*UnimplementedTestInstructionBackendGrpcServicesServer) GenerateGuid(ctx context.Context, req *EmptyParameter) (*GuidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateGuid not implemented")
}
func (*UnimplementedTestInstructionBackendGrpcServicesServer) LoadFromServer(ctx context.Context, req *QMLModelTypeToAndFromBackendMessage) (*QmlModeToLoadlFromServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadFromServer not implemented")
}
func (*UnimplementedTestInstructionBackendGrpcServicesServer) SaveToServer(ctx context.Context, req *QmlModelToSaveAtServerRequest) (*AckNackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveToServer not implemented")
}

func RegisterTestInstructionBackendGrpcServicesServer(s *grpc.Server, srv TestInstructionBackendGrpcServicesServer) {
	s.RegisterService(&_TestInstructionBackendGrpcServices_serviceDesc, srv)
}

func _TestInstructionBackendGrpcServices_AreYouAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestInstructionBackendGrpcServicesServer).AreYouAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend_server_grpc_api.TestInstructionBackendGrpcServices/AreYouAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestInstructionBackendGrpcServicesServer).AreYouAlive(ctx, req.(*EmptyParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestInstructionBackendGrpcServices_GenerateGuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestInstructionBackendGrpcServicesServer).GenerateGuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend_server_grpc_api.TestInstructionBackendGrpcServices/GenerateGuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestInstructionBackendGrpcServicesServer).GenerateGuid(ctx, req.(*EmptyParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestInstructionBackendGrpcServices_LoadFromServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QMLModelTypeToAndFromBackendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestInstructionBackendGrpcServicesServer).LoadFromServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend_server_grpc_api.TestInstructionBackendGrpcServices/LoadFromServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestInstructionBackendGrpcServicesServer).LoadFromServer(ctx, req.(*QMLModelTypeToAndFromBackendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestInstructionBackendGrpcServices_SaveToServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QmlModelToSaveAtServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestInstructionBackendGrpcServicesServer).SaveToServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend_server_grpc_api.TestInstructionBackendGrpcServices/SaveToServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestInstructionBackendGrpcServicesServer).SaveToServer(ctx, req.(*QmlModelToSaveAtServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestInstructionBackendGrpcServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend_server_grpc_api.TestInstructionBackendGrpcServices",
	HandlerType: (*TestInstructionBackendGrpcServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AreYouAlive",
			Handler:    _TestInstructionBackendGrpcServices_AreYouAlive_Handler,
		},
		{
			MethodName: "GenerateGuid",
			Handler:    _TestInstructionBackendGrpcServices_GenerateGuid_Handler,
		},
		{
			MethodName: "LoadFromServer",
			Handler:    _TestInstructionBackendGrpcServices_LoadFromServer_Handler,
		},
		{
			MethodName: "SaveToServer",
			Handler:    _TestInstructionBackendGrpcServices_SaveToServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend_grpc_server.proto",
}
